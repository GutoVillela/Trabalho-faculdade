package UI;

import BLL.AluguelBLL;
import BLL.ClienteBLL;
import BLL.CopiaParaAlugarBLL;
import BLL.EquipamentoDaLojaBLL;
import BLL.PessoaFisicaBLL;
import BLL.PessoaJuridicaBLL;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.List;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.ListModel;
import javax.swing.SpinnerDateModel;

public class frmCadAluguel extends javax.swing.JFrame {

    /**
     * Creates new form frmCadAluguel
     */
    public frmCadAluguel() {
        initComponents();
        /*
        modelListaJogosParaAlugar = (DefaultListModel) lstJogosParaAlugar.getModel();
        modelListaMaquinasParaAlugar = (DefaultListModel) lstMaquinasDisponiveis.getModel();
        modelListaJogosDoAluguel = (DefaultListModel) lstJogosDoAluguel.getModel();
        modelListaMaquinasDoAluguel = (DefaultListModel) lstMaquinasDoAluguel.getModel();
         */
        modelListaJogosParaAlugar = new DefaultListModel();
        modelListaMaquinasParaAlugar = new DefaultListModel();
        modelListaJogosDoAluguel = new DefaultListModel();
        modelListaMaquinasDoAluguel = new DefaultListModel();
    }
    //OBJETOS PARA MANIPULAR IISTAS
    DefaultListModel modelListaJogosParaAlugar;
    DefaultListModel modelListaMaquinasParaAlugar;
    DefaultListModel modelListaJogosDoAluguel;
    DefaultListModel modelListaMaquinasDoAluguel;

    private CopiaParaAlugarBLL cpaBLL = new CopiaParaAlugarBLL(); // INSTÂNCIA DO OBJETO BLL NECESSÁRIO
    private List<CopiaParaAlugarBLL> listaDeJogosParaAlugar; // LISTA DE JOGOS PARA ALUGAR

    private EquipamentoDaLojaBLL edlBLL = new EquipamentoDaLojaBLL();
    private List<EquipamentoDaLojaBLL> listaDeMaquinasParaAlugar;

    private PessoaFisicaBLL pfBLL = new PessoaFisicaBLL();
    private List<PessoaFisicaBLL> listaDeClientesFisicos;

    private PessoaJuridicaBLL pjBLL = new PessoaJuridicaBLL();
    private List<PessoaJuridicaBLL> listaDeClientesJuridicos;

    //ATRIBUTOS PARA CADASTRAR O ALUGUEL COM SUCESSO
    private AluguelBLL aluguel = new AluguelBLL();
    private ClienteBLL clienteQueEstaAlugando = new ClienteBLL();
    private List<CopiaParaAlugarBLL> copiasQueSeraoAlugadas = new ArrayList<>();
    private List<EquipamentoDaLojaBLL> equipamentosQueSeraoAlugados = new ArrayList<>();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btgTipoCliente = new javax.swing.ButtonGroup();
        jLabel3 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        cmbCliente = new javax.swing.JComboBox<>();
        rdbPessoaFisica = new javax.swing.JRadioButton();
        rdbPessoaJuridica = new javax.swing.JRadioButton();
        btnBuscar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstJogosParaAlugar = new javax.swing.JList<>();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        lstMaquinasDisponiveis = new javax.swing.JList<>();
        jLabel7 = new javax.swing.JLabel();
        txtValorPorHora = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        lstJogosDoAluguel = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstMaquinasDoAluguel = new javax.swing.JList<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        spnHorarioInicioHora = new javax.swing.JSpinner();
        jLabel8 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        spnDuracao = new javax.swing.JSpinner();
        spnHorarioInicioMinuto = new javax.swing.JSpinner();
        jLabel9 = new javax.swing.JLabel();
        btnCadAluguel = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(0, 0, 0));

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("CLIENTE: ");

        cmbCliente.setEditable(true);
        cmbCliente.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btgTipoCliente.add(rdbPessoaFisica);
        rdbPessoaFisica.setForeground(new java.awt.Color(255, 255, 255));
        rdbPessoaFisica.setText("Pessoa Física");
        rdbPessoaFisica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbPessoaFisicaActionPerformed(evt);
            }
        });

        btgTipoCliente.add(rdbPessoaJuridica);
        rdbPessoaJuridica.setForeground(new java.awt.Color(255, 255, 255));
        rdbPessoaJuridica.setText("Pessoa Jurídica");
        rdbPessoaJuridica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbPessoaJuridicaActionPerformed(evt);
            }
        });

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMGS/lupa_search.png"))); // NOI18N
        btnBuscar.setToolTipText("Consultar");

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "JOGOS DISPONÍVEIS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Century Gothic", 1, 10), new java.awt.Color(255, 255, 255))); // NOI18N

        lstJogosParaAlugar.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        lstJogosParaAlugar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstJogosParaAlugarMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(lstJogosParaAlugar);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 69, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "MÁQUINAS DISPONÍVEIS", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Century Gothic", 1, 10), new java.awt.Color(255, 255, 255))); // NOI18N

        lstMaquinasDisponiveis.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        lstMaquinasDisponiveis.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstMaquinasDisponiveisMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(lstMaquinasDisponiveis);

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Valor por hora:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(0, 30, Short.MAX_VALUE))
                    .addComponent(txtValorPorHora))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtValorPorHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(0, 0, 0));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ESTE ALUGUEL", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Century Gothic", 1, 10), new java.awt.Color(255, 255, 255))); // NOI18N

        lstJogosDoAluguel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstJogosDoAluguelMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(lstJogosDoAluguel);

        lstMaquinasDoAluguel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstMaquinasDoAluguelMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(lstMaquinasDoAluguel);

        jLabel5.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("JOGOS:");

        jLabel6.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("MÁQUINAS:");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE)
                    .addComponent(jScrollPane4))
                .addContainerGap())
        );

        jPanel5.setBackground(new java.awt.Color(0, 0, 0));

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("HORÁRIO INÍCIO: ");

        spnHorarioInicioHora.setModel(new javax.swing.SpinnerNumberModel(0, 0, 23, 1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("h");

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("DURAÇÃO: ");

        spnDuracao.setModel(new javax.swing.SpinnerListModel(new String[] {"30m", "1h", "1h30m", "2h", "2h30m", "3h", "3h30m", "4h", "4h30m", "5h", "5h30m", "6h", "6h30m", "7h", "7h30m", "8h"}));

        spnHorarioInicioMinuto.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 15));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("m");

        btnCadAluguel.setBackground(new java.awt.Color(0, 0, 0));
        btnCadAluguel.setForeground(new java.awt.Color(255, 255, 255));
        btnCadAluguel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMGS/cadastrar.png"))); // NOI18N
        btnCadAluguel.setToolTipText("Salvar");
        btnCadAluguel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadAluguelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(7, 7, 7)
                        .addComponent(spnHorarioInicioHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spnHorarioInicioMinuto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(spnDuracao, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnCadAluguel))
                .addContainerGap(176, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(spnHorarioInicioHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(spnHorarioInicioMinuto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(spnDuracao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(btnCadAluguel, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(67, Short.MAX_VALUE))
        );

        jPanel6.setBackground(new java.awt.Color(51, 51, 51));

        jLabel10.setFont(new java.awt.Font("Perpetua Titling MT", 3, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMGS/cadastrar_aluguel.png"))); // NOI18N
        jLabel10.setText("cadastrar aluguel");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(243, 243, 243))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(rdbPessoaFisica)
                                .addGap(18, 18, 18)
                                .addComponent(rdbPessoaJuridica)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(cmbCliente, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscar)
                        .addGap(181, 181, 181))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(172, Short.MAX_VALUE))))
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cmbCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdbPessoaFisica)
                    .addComponent(rdbPessoaJuridica))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

        //PREENCHER LISTA DE JOGOS
        listaDeJogosParaAlugar = cpaBLL.Consultar();
        PreencherListaDeJogosParaAlugar();

        //PREENCHER LISTA DE MÁQUINAS
        listaDeMaquinasParaAlugar = edlBLL.Consultar();
        PreencherListaDeMaquinasParaAlugar();

        // PREENCHER LISTA DE CLIENTES FÍSICOS E JURÍDICOS
        listaDeClientesFisicos = pfBLL.Consultar();
        listaDeClientesJuridicos = pjBLL.Consultar();
        rdbPessoaFisica.setSelected(true); // SELECIONAR O RADIOBUTTON DE PESSOA FÍSICA
        CarregarClientes();
    }//GEN-LAST:event_formWindowOpened

    private void lstJogosParaAlugarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstJogosParaAlugarMouseClicked

        // RECONHECER SE É UM CLIQUE DUPLO
        if (evt.getClickCount() == 2) {

            copiasQueSeraoAlugadas.add(listaDeJogosParaAlugar.get(lstJogosParaAlugar.getSelectedIndex()));
            AtualizarJogosAlugados();

        }

    }//GEN-LAST:event_lstJogosParaAlugarMouseClicked

    private void lstMaquinasDisponiveisMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstMaquinasDisponiveisMouseClicked

        // EXIBIR VALOR POR HORA DESTA MÁQUINA
        txtValorPorHora.setText(String.valueOf(listaDeMaquinasParaAlugar.get(lstMaquinasDisponiveis.getSelectedIndex()).getValorPorHora()));

        // RECONHECER SE É UM CLIQUE DUPLO
        if (evt.getClickCount() == 2) {

            boolean naoRepetido = true;
            
            // VERIFICAR SE A MÁQUINA ATUAL JÁ EXISTE 
            for (int i = 0; i < equipamentosQueSeraoAlugados.size(); i++) {
                
                if(equipamentosQueSeraoAlugados.get(i) == listaDeMaquinasParaAlugar.get(lstMaquinasDisponiveis.getSelectedIndex()))
                    naoRepetido = false;
                
            }
            
            // SÓ ADICIONAR MÁQUINA À LISTA SE ELA NÃO FOR REPETIDA
            if (naoRepetido) {
                equipamentosQueSeraoAlugados.add(listaDeMaquinasParaAlugar.get(lstMaquinasDisponiveis.getSelectedIndex()));
                AtualizarEquipamentosAlugados();
            }
            else{
                JOptionPane.showMessageDialog(null, "Máquina repetida.");
            }
            

        }


    }//GEN-LAST:event_lstMaquinasDisponiveisMouseClicked

    private void lstJogosDoAluguelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstJogosDoAluguelMouseClicked

        if (evt.getClickCount() == 2) {
            copiasQueSeraoAlugadas.remove(lstJogosDoAluguel.getSelectedIndex());
            AtualizarJogosAlugados();
        }

    }//GEN-LAST:event_lstJogosDoAluguelMouseClicked

    private void lstMaquinasDoAluguelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstMaquinasDoAluguelMouseClicked
        if (evt.getClickCount() == 2) {
            equipamentosQueSeraoAlugados.remove(lstMaquinasDoAluguel.getSelectedIndex());
            AtualizarEquipamentosAlugados();
        }
    }//GEN-LAST:event_lstMaquinasDoAluguelMouseClicked

    private void btnCadAluguelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadAluguelActionPerformed

        //DEFINIR HORÁRIO DE INÍCIO DO ALUGUEL
        GregorianCalendar calendario = new GregorianCalendar();
        int dia, mes, ano, hora, minuto;
        dia = calendario.get(Calendar.DAY_OF_MONTH);
        mes = 1 + calendario.get(Calendar.MONTH);
        ano = calendario.get(Calendar.YEAR);
        hora = Integer.valueOf(spnHorarioInicioHora.getValue().toString());
        minuto = Integer.valueOf(spnHorarioInicioMinuto.getValue().toString());
        String horario = ano + "-" + mes + "-" + dia + " " + hora + ":" + minuto;

        aluguel.setHorarioInicio(horario);

        if (null != spnDuracao.getValue().toString()) //DEFINIR DURACAO
        {
            switch (spnDuracao.getValue().toString()) {
                case "30m":
                    aluguel.setDuracao("00:30:00");
                    break;
                case "1h":
                    aluguel.setDuracao("01:00:00");
                    break;
                case "1h30m":
                    aluguel.setDuracao("01:30:00");
                    break;
                case "2h":
                    aluguel.setDuracao("02:00:00");
                    break;
                case "2h30m":
                    aluguel.setDuracao("02:30:00");
                    break;
                case "3h":
                    aluguel.setDuracao("03:00:00");
                    break;
                case "3h30m":
                    aluguel.setDuracao("03:30:00");
                    break;
                case "4h":
                    aluguel.setDuracao("04:00:00");
                    break;
                case "4h30m":
                    aluguel.setDuracao("04:30:00");
                    break;
                case "5h":
                    aluguel.setDuracao("05:00:00");
                    break;
                case "5h30m":
                    aluguel.setDuracao("05:30:00");
                    break;
                case "6h":
                    aluguel.setDuracao("06:00:00");
                    break;
                case "6h30m":
                    aluguel.setDuracao("06:30:00");
                    break;
                case "7h":
                    aluguel.setDuracao("07:00:00");
                    break;
                case "7h30m":
                    aluguel.setDuracao("07:30:00");
                    break;
                case "8h":
                    aluguel.setDuracao("08:00:00");
                    break;
                default:
                    break;
            }
        }

        //DEFINIR ATIVO
        aluguel.setAtivo(true);

        //DEFINIR O CLIENTE QUE ESTÁ ALUGANDO
        if (rdbPessoaFisica.isSelected() && listaDeClientesFisicos.size() > 0) {
            clienteQueEstaAlugando = listaDeClientesFisicos.get(cmbCliente.getSelectedIndex());
        } else if (rdbPessoaJuridica.isSelected() && listaDeClientesJuridicos.size() > 0) {
            clienteQueEstaAlugando = listaDeClientesJuridicos.get(cmbCliente.getSelectedIndex());
        }

        aluguel.setCliente(clienteQueEstaAlugando);

        // DEFINIR JOGOS DO ALUGUEL
        aluguel.setCopiasDoAluguel(copiasQueSeraoAlugadas);

        // DEFINIR EQUIPAMENTOS DO ALUGUEL
        aluguel.setEquipamentosDoAluguel(equipamentosQueSeraoAlugados);

        if (aluguel.Cadastrar()) {
            JOptionPane.showConfirmDialog(null, "Deu certo, mano.", null, JOptionPane.YES_NO_OPTION);
        } else {
            JOptionPane.showConfirmDialog(null, "Deu tudo errado, mano.", null, JOptionPane.YES_NO_OPTION, JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_btnCadAluguelActionPerformed

    private void rdbPessoaFisicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbPessoaFisicaActionPerformed
        CarregarClientes();
    }//GEN-LAST:event_rdbPessoaFisicaActionPerformed

    private void rdbPessoaJuridicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbPessoaJuridicaActionPerformed
        CarregarClientes();
    }//GEN-LAST:event_rdbPessoaJuridicaActionPerformed

    private void PreencherListaDeJogosParaAlugar() {
        //LIMPAR LISTA E PREENCHER COM NOVOS DADOS
        modelListaJogosParaAlugar.removeAllElements();

        for (int i = 0; i < listaDeJogosParaAlugar.size(); i++) {
            modelListaJogosParaAlugar.addElement(listaDeJogosParaAlugar.get(i).getTitulo().getNome());

        }

        // CRIAR LISTA E PREENCHELA COM O MODEL
        ListModel lista = modelListaJogosParaAlugar;

        // ATRIBUIR ListModel À LISTA
        lstJogosParaAlugar.setModel(lista);

    }

    private void PreencherListaDeMaquinasParaAlugar() {
        //LIMPAR LISTA E PREENCHER COM NOVOS DADOS
        modelListaMaquinasParaAlugar.removeAllElements();

        for (int i = 0; i < listaDeMaquinasParaAlugar.size(); i++) {
            modelListaMaquinasParaAlugar.addElement(listaDeMaquinasParaAlugar.get(i).getNome());

        }

        // CRIAR LISTA E PREENCHELA COM O MODEL
        ListModel lista = modelListaMaquinasParaAlugar;

        // ATRIBUIR ListModel À LISTA
        lstMaquinasDisponiveis.setModel(lista);
    }

    private void CarregarClientes() {

        // LIMPAR COMBO BOX
        cmbCliente.removeAllItems();

        if (rdbPessoaFisica.isSelected()) {
            // PREENCHER COMBO BOX COM PESSOAS FÍSICAS
            for (int i = 0; i < listaDeClientesFisicos.size(); i++) {

                cmbCliente.addItem(listaDeClientesFisicos.get(i).getNome());

            }
        } else if (rdbPessoaJuridica.isSelected()) {
            //PREENCHER COMBO BOX COM PESSOAS JURÍDICAS
            for (int i = 0; i < listaDeClientesJuridicos.size(); i++) {

                cmbCliente.addItem(listaDeClientesJuridicos.get(i).getRazaoSocial());

            }
        }

    }

    private void AtualizarJogosAlugados() {

        //LIMPAR LISTA E PREENCHER COM NOVOS DADOS
        modelListaJogosDoAluguel.removeAllElements();

        for (int i = 0; i < copiasQueSeraoAlugadas.size(); i++) {
            modelListaJogosDoAluguel.addElement(copiasQueSeraoAlugadas.get(i).getTitulo().getNome());

        }

        // CRIAR LISTA E PREENCHELA COM O MODEL
        ListModel lista = modelListaJogosDoAluguel;

        // ATRIBUIR ListModel À LISTA
        lstJogosDoAluguel.setModel(lista);
    }

    private void AtualizarEquipamentosAlugados() {

        //LIMPAR LISTA E PREENCHER COM NOVOS DADOS
        modelListaMaquinasDoAluguel.removeAllElements();

        for (int i = 0; i < equipamentosQueSeraoAlugados.size(); i++) {
            modelListaMaquinasDoAluguel.addElement(equipamentosQueSeraoAlugados.get(i).getNome());

        }

        // CRIAR LISTA E PREENCHELA COM O MODEL
        ListModel lista = modelListaMaquinasDoAluguel;

        // ATRIBUIR ListModel À LISTA
        lstMaquinasDoAluguel.setModel(lista);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmCadAluguel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmCadAluguel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmCadAluguel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmCadAluguel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmCadAluguel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btgTipoCliente;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCadAluguel;
    private javax.swing.JComboBox<String> cmbCliente;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JList<String> lstJogosDoAluguel;
    private javax.swing.JList<String> lstJogosParaAlugar;
    private javax.swing.JList<String> lstMaquinasDisponiveis;
    private javax.swing.JList<String> lstMaquinasDoAluguel;
    private javax.swing.JRadioButton rdbPessoaFisica;
    private javax.swing.JRadioButton rdbPessoaJuridica;
    private javax.swing.JSpinner spnDuracao;
    private javax.swing.JSpinner spnHorarioInicioHora;
    private javax.swing.JSpinner spnHorarioInicioMinuto;
    private javax.swing.JTextField txtValorPorHora;
    // End of variables declaration//GEN-END:variables
}
